// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code. Version 3.4.0.37595
//    <NameSpace>CC.Business.ProfileManager.Core.CribisComX.BusinessObjects</NameSpace><Collection>List</Collection><codeType>CSharp</codeType><EnableDataBinding>False</EnableDataBinding><EnableLazyLoading>False</EnableLazyLoading><TrackingChangesEnable>False</TrackingChangesEnable><GenTrackingClasses>False</GenTrackingClasses><HidePrivateFieldInIDE>False</HidePrivateFieldInIDE><EnableSummaryComment>True</EnableSummaryComment><VirtualProp>False</VirtualProp><IncludeSerializeMethod>True</IncludeSerializeMethod><UseBaseClass>False</UseBaseClass><GenBaseClass>False</GenBaseClass><GenerateCloneMethod>False</GenerateCloneMethod><GenerateDataContracts>False</GenerateDataContracts><CodeBaseTag>Net20</CodeBaseTag><SerializeMethodName>Serialize</SerializeMethodName><DeserializeMethodName>Deserialize</DeserializeMethodName><SaveToFileMethodName>SaveToFile</SaveToFileMethodName><LoadFromFileMethodName>LoadFromFile</LoadFromFileMethodName><GenerateXMLAttributes>True</GenerateXMLAttributes><EnableEncoding>False</EnableEncoding><AutomaticProperties>False</AutomaticProperties><GenerateShouldSerialize>False</GenerateShouldSerialize><DisableDebug>False</DisableDebug><PropNameSpecified>Default</PropNameSpecified><Encoder>UTF8</Encoder><CustomUsings></CustomUsings><ExcludeIncludedTypes>False</ExcludeIncludedTypes><EnableInitializeFields>True</EnableInitializeFields>
//  </auto-generated>
// ------------------------------------------------------------------------------
namespace CC.Business.ProfileManager.Core.CribisComX.BusinessObjects
{
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.Collections;
    using System.Xml.Schema;
    using System.ComponentModel;
    using System.IO;
    using System.Text;
    using System.Collections.Generic;


    /// <summary>
    /// Custom Company Report Profile
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "urn:crif-cribiscom-companyreport-2010-11-24")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "urn:crif-cribiscom-companyreport-2010-11-24", IsNullable = false)]
    public partial class CCRP
    {

        private ReportDefinition sLOT1Field;

        private ReportDefinition sLOT2Field;

        private ReportDefinition sLOT3Field;

        private ReportDefinition sLOT4Field;

        private ReportDefinition sLOT5Field;

        private ReportDefinition sLOT6Field;

        private ReportDefinition sLOT7Field;

        private ReportDefinition sLOT8Field;

        private ReportDefinition sLOT9Field;

        private ReportDefinition sLOT10Field;

        private ReportDefinition sLOT11Field;

        private ReportDefinition sLOT12Field;

        private ReportDefinition sLOT13Field;

        private ReportDefinition sLOT14Field;

        private ReportDefinition sLOT15Field;

        private ReportDefinition sLOT16Field;

        private ReportDefinition sLOT17Field;

        private ReportDefinition sLOT18Field;

        private ReportDefinition sLOT19Field;

        private ReportDefinition sLOT20Field;

        private ReportDefinition sLOT21Field;

        private ReportDefinition sLOT22Field;

        private ReportDefinition sLOT23Field;

        private ReportDefinition sLOT24Field;

        private ReportDefinition sLOT25Field;

        private static System.Xml.Serialization.XmlSerializer serializer;

        /// <summary>
        /// CCRP class constructor
        /// </summary>
        public CCRP()
        {
            this.sLOT25Field = new ReportDefinition();
            this.sLOT24Field = new ReportDefinition();
            this.sLOT23Field = new ReportDefinition();
            this.sLOT22Field = new ReportDefinition();
            this.sLOT21Field = new ReportDefinition();
            this.sLOT20Field = new ReportDefinition();
            this.sLOT19Field = new ReportDefinition();
            this.sLOT18Field = new ReportDefinition();
            this.sLOT17Field = new ReportDefinition();
            this.sLOT16Field = new ReportDefinition();
            this.sLOT15Field = new ReportDefinition();
            this.sLOT14Field = new ReportDefinition();
            this.sLOT13Field = new ReportDefinition();
            this.sLOT12Field = new ReportDefinition();
            this.sLOT11Field = new ReportDefinition();
            this.sLOT10Field = new ReportDefinition();
            this.sLOT9Field = new ReportDefinition();
            this.sLOT8Field = new ReportDefinition();
            this.sLOT7Field = new ReportDefinition();
            this.sLOT6Field = new ReportDefinition();
            this.sLOT5Field = new ReportDefinition();
            this.sLOT4Field = new ReportDefinition();
            this.sLOT3Field = new ReportDefinition();
            this.sLOT2Field = new ReportDefinition();
            this.sLOT1Field = new ReportDefinition();
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
        public ReportDefinition SLOT1
        {
            get
            {
                return this.sLOT1Field;
            }
            set
            {
                this.sLOT1Field = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
        public ReportDefinition SLOT2
        {
            get
            {
                return this.sLOT2Field;
            }
            set
            {
                this.sLOT2Field = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
        public ReportDefinition SLOT3
        {
            get
            {
                return this.sLOT3Field;
            }
            set
            {
                this.sLOT3Field = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
        public ReportDefinition SLOT4
        {
            get
            {
                return this.sLOT4Field;
            }
            set
            {
                this.sLOT4Field = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
        public ReportDefinition SLOT5
        {
            get
            {
                return this.sLOT5Field;
            }
            set
            {
                this.sLOT5Field = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 5)]
        public ReportDefinition SLOT6
        {
            get
            {
                return this.sLOT6Field;
            }
            set
            {
                this.sLOT6Field = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 6)]
        public ReportDefinition SLOT7
        {
            get
            {
                return this.sLOT7Field;
            }
            set
            {
                this.sLOT7Field = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 7)]
        public ReportDefinition SLOT8
        {
            get
            {
                return this.sLOT8Field;
            }
            set
            {
                this.sLOT8Field = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 8)]
        public ReportDefinition SLOT9
        {
            get
            {
                return this.sLOT9Field;
            }
            set
            {
                this.sLOT9Field = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 9)]
        public ReportDefinition SLOT10
        {
            get
            {
                return this.sLOT10Field;
            }
            set
            {
                this.sLOT10Field = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 10)]
        public ReportDefinition SLOT11
        {
            get
            {
                return this.sLOT11Field;
            }
            set
            {
                this.sLOT11Field = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 11)]
        public ReportDefinition SLOT12
        {
            get
            {
                return this.sLOT12Field;
            }
            set
            {
                this.sLOT12Field = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 12)]
        public ReportDefinition SLOT13
        {
            get
            {
                return this.sLOT13Field;
            }
            set
            {
                this.sLOT13Field = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 13)]
        public ReportDefinition SLOT14
        {
            get
            {
                return this.sLOT14Field;
            }
            set
            {
                this.sLOT14Field = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 14)]
        public ReportDefinition SLOT15
        {
            get
            {
                return this.sLOT15Field;
            }
            set
            {
                this.sLOT15Field = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 15)]
        public ReportDefinition SLOT16
        {
            get
            {
                return this.sLOT16Field;
            }
            set
            {
                this.sLOT16Field = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 16)]
        public ReportDefinition SLOT17
        {
            get
            {
                return this.sLOT17Field;
            }
            set
            {
                this.sLOT17Field = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 17)]
        public ReportDefinition SLOT18
        {
            get
            {
                return this.sLOT18Field;
            }
            set
            {
                this.sLOT18Field = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 18)]
        public ReportDefinition SLOT19
        {
            get
            {
                return this.sLOT19Field;
            }
            set
            {
                this.sLOT19Field = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 19)]
        public ReportDefinition SLOT20
        {
            get
            {
                return this.sLOT20Field;
            }
            set
            {
                this.sLOT20Field = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 20)]
        public ReportDefinition SLOT21
        {
            get
            {
                return this.sLOT21Field;
            }
            set
            {
                this.sLOT21Field = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 21)]
        public ReportDefinition SLOT22
        {
            get
            {
                return this.sLOT22Field;
            }
            set
            {
                this.sLOT22Field = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 22)]
        public ReportDefinition SLOT23
        {
            get
            {
                return this.sLOT23Field;
            }
            set
            {
                this.sLOT23Field = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 23)]
        public ReportDefinition SLOT24
        {
            get
            {
                return this.sLOT24Field;
            }
            set
            {
                this.sLOT24Field = value;
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 24)]
        public ReportDefinition SLOT25
        {
            get
            {
                return this.sLOT25Field;
            }
            set
            {
                this.sLOT25Field = value;
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(CCRP));
                }
                return serializer;
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current CCRP object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize()
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                Serializer.Serialize(memoryStream, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes workflow markup into an CCRP object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output CCRP object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out CCRP obj, out System.Exception exception)
        {
            exception = null;
            obj = default(CCRP);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out CCRP obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static CCRP Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((CCRP)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current CCRP object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual void SaveToFile(string fileName)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize();
                System.IO.FileInfo xmlFile = new System.IO.FileInfo(fileName);
                streamWriter = xmlFile.CreateText();
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an CCRP object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output CCRP object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, out CCRP obj, out System.Exception exception)
        {
            exception = null;
            obj = default(CCRP);
            try
            {
                obj = LoadFromFile(fileName);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out CCRP obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static CCRP LoadFromFile(string fileName)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:crif-cribiscom-companyreport-2010-11-24")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "urn:crif-cribiscom-companyreport-2010-11-24", IsNullable = true)]
    public partial class ReportDefinition
    {

        private string pcField;

        private static System.Xml.Serialization.XmlSerializer serializer;

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string PC
        {
            get
            {
                return this.pcField;
            }
            set
            {
                this.pcField = value;
            }
        }

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(ReportDefinition));
                }
                return serializer;
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ReportDefinition object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize()
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                Serializer.Serialize(memoryStream, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes workflow markup into an ReportDefinition object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output ReportDefinition object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out ReportDefinition obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ReportDefinition);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out ReportDefinition obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static ReportDefinition Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((ReportDefinition)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current ReportDefinition object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual void SaveToFile(string fileName)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize();
                System.IO.FileInfo xmlFile = new System.IO.FileInfo(fileName);
                streamWriter = xmlFile.CreateText();
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an ReportDefinition object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ReportDefinition object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, out ReportDefinition obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ReportDefinition);
            try
            {
                obj = LoadFromFile(fileName);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out ReportDefinition obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static ReportDefinition LoadFromFile(string fileName)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }
}
